---
docker_version: "1.12.*"
docker_debug: false
docker_selinux: true

# If TLS is enabled, you must fill the ca, cert and key variables with the
# *contents* of those files
docker_tls:
  enabled: false
  ca: ""
  cert: ""
  key: ""

docker_log:
  driver: "journald"
  opts: []

# Options are:
#   socketOnly: listen only on default socket
#   local: listen on IP loopback
#   remote: listen on all networks (PLEASE ENABLE TLS)
docker_listen: "socketOnly"

docker_labels: []

docker_registry:
  add: []
  block: []

docker_storage:
  driver: "devicemapper"
  opts: []
  # Ignore already existing filesystems signatures (mostly safe)
  wipesignatures: true

# LVM VG to put the docker images (if using devicemapper) and then, if using
# docker_data.enabled==true, the data generated by the containers
docker_vg:
  # Specify an already existing VG to reuse it, and then set docker_vg.create
  # to false
  name: "docker"
  # WARNING: will wipe devices on docker_vg.devs
  create: false
  # Specify PVs (any block devices) to compose the VG
  devs:
    - "/dev/sdb"

# LVM thinpool configurations
# Only useful when docker_storage.driver==devicemapper
docker_pool:
  name: "pool"
  # Size can be any string that LVM recognizes
  size: "40%FREE"
  grow: "true"
  autoextend:
    enabled: true
    threshold: "80"
    percent: "20"

# Use a separated LV for docker data
# If not enabled, data generated inside containers will be placed in the
# system root partition
docker_data:
  enabled: true
  name: "data"
  # Size can be any string that LVM recognizes
  size: "40%FREE"
